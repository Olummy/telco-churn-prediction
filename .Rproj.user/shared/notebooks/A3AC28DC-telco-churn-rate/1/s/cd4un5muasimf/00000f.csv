"0","#| warning: false"
"0","#| message: false"
"0","#| label: model setup"
"0",""
"0",""
"0","# single-layer neural network"
"0",""
"0","mlp_spec <- "
"0","  mlp(hidden_units = tune(),"
"0","      penalty = tune(),"
"0","      epochs = tune()) %>% "
"0","  set_engine(""nnet"") %>% "
"0","  set_mode(""classification"")"
"0",""
"0","# bagged trees"
"0",""
"0","bagging_spec <- "
"0","  bag_tree(cost_complexity = tune(),"
"0","           tree_depth = tune(), "
"0","           min_n = tune(), "
"0","           class_cost = tune()) %>% "
"0","  set_engine(""rpart"") %>% "
"0","  set_mode(""classification"")"
"0",""
"0","# xgboost "
"0",""
"0","xgb_spec <- "
"0","  boost_tree("
"0","    mtry = tune(),"
"0","    trees = tune(),"
"0","    min_n = tune(),"
"0","    tree_depth = tune(),"
"0","    learn_rate = tune(),"
"0","    loss_reduction = tune()"
"0","  ) %>% "
"0","  set_engine(""xgboost"") %>% "
"0","  set_mode(""classification"")"
"0",""
"0",""
"0","# lightGBM"
"0",""
"0","lightGBM_spec <- "
"0","  boost_tree("
"0","    mode = ""classification"","
"0","    mtry = tune(),"
"0","    trees = tune(),"
"0","    min_n = tune(),"
"0","    tree_depth = tune(),"
"0","    learn_rate = tune(),"
"0","    loss_reduction = tune(),"
"0","    sample_size = tune()"
"0","  ) %>% "
"0","  set_engine(""lightgbm"")"
